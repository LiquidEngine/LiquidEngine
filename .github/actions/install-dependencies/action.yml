name: Install vcpkg dependencies
description: Install dependencies and cache the results
inputs:
  triplet:
    description: Triplet
    required: true
  mono:
    description: Mono prefix for linux
    required: true
  token:
    description: Github token
    required: true
  cacheAction:
    description: Whether to read, write, or readwrite to cache
    required: false
    default: "read"

runs:
  using: composite

  steps:
    - name: Install dependencies
      if: runner.os == 'Linux'
      shell: pwsh
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y -qq libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev mono-complete

    - uses: ./.github/actions/setup-vcpkg
    - name: Check vcpkg version
      shell: pwsh
      run: ./vcpkg/vcpkg version
    - name: Setup Nuget as binary source provider
      shell: pwsh
      env:
        NUGET_SOURCE: "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      run: |
        function nuget() {
            $nugetPath = & ./vcpkg/vcpkg fetch nuget | Select-Object -Last 1
            & ${{ inputs.mono }} $nugetPath @args
        }

        nuget sources remove -name "nuget.org"

        nuget sources add `
            -name "GitHub" `
            -source $env:NUGET_SOURCE `
            -username "${{ github.repository_owner }}" `
            -password "${{ inputs.token }}" `
            -storepasswordincleartext

        nuget setapikey "${{ inputs.token }}" -source $env:NUGET_SOURCE

    - name: Install packages
      shell: pwsh
      env:
        VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,${{ inputs.cacheAction }}"
        VCPKG_USE_NUGET_CACHE: true
        DEBUG_INSTALL: false
      run: |
        if ($env:DEBUG_INSTALL -eq 'true') {
         ./vcpkg/vcpkg install --triplet ${{ inputs.triplet }} --debug
        } else {
         ./vcpkg/vcpkg install --triplet ${{ inputs.triplet }}
        }
    - name: Install other dependencies (deprecated)
      shell: pwsh
      run: |
        python3 project.py
