name: Pull Request Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format-check:
    name: Format Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install clang-format
      - name: Verify Clang Format
        run: ./scripts/clang-format-all.sh 14 verify

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt-get clean
          sudo apt update
          sudo apt install vulkan-sdk xorg-dev libx11-dev clang-tidy

      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        id: cache-vendor
        with:
          path: ./vendor
          key: ${{ runner.os }}-static-analysis-${{ hashFiles('./project.json') }}

      - name: Install dependencies and setup project
        run: |
          python3 project.py

      - name: Static Analysis
        run: |
          ./scripts/clang-tidy-all.sh 14

  docs-checker:
    name: Documentation checker
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt-get clean
          sudo apt update
          sudo apt install vulkan-sdk xorg-dev libx11-dev clang-tidy doxygen

      - uses: actions/checkout@v2

      - name: Doxygen checks
        run: |
          ./scripts/doxygen-validate.sh

  build-and-test-linux:
    name: Build and test
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt-get clean
          sudo apt update
          sudo apt install vulkan-sdk xorg-dev libx11-dev clang-tidy lcov

      - name: Install premake
        run: |
          wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha16/premake-5.0.0-alpha16-linux.tar.gz
          tar xvzf premake-5.0.0-alpha16-linux.tar.gz
          chmod +x premake5
          sudo mv premake5 /usr/local/bin/premake5

      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        id: cache-vendor
        with:
          path: ./vendor
          key: ${{ runner.os }}-build-and-test-${{ hashFiles('./project.json') }}

      - name: Install dependencies and setup project
        run: |
          python3 project.py
          premake5 gmake

      - name: Build
        run: |
          make --directory workspace -j$(nproc) config=test

      - name: Test engine
        run: |
          cd workspace/engine-test/bin/Test
          ./LiquidEngineTest

      - name: Test editor
        run: |
          cd workspace/editor-test/bin/Test
          ./LiquidEditorTest

      - name: Coverage
        run: |
          ./scripts/generate-coverage-report.sh

      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/report.info
          flags: engine-unit
          verbose: true
          fail_ci_if_error: true
